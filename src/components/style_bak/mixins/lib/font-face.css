/**
 * Generates an `@font-face` declaration. You can choose the specific file
 * formats you need to output; the mixin supports `eot`, `ttf`, `svg`, `woff2`
 * and `woff`. The mixin also supports usage with the Rails Asset Pipeline,
 * which you can enable per use, or globally in the `$bourbon()` settings
 *
 * @require {function} _font-source-declaration
 * @param {string} $font-family
 * @param {string} $file-path
 * @param {string} $asset-pipeline [false]
 * @param {string | list} $file-formats [('ttf', 'woff2', 'woff')]
 *   Pass a list of file formats to support,
 *   for example ("eot", "ttf", "svg", "woff2", "woff")
 *
 * @content
 *   Any additional CSS properties that are included in the `@include`
 *   directive will be output within the `@font-face` declaration, e.g. you can
 *   pass in `font-weight`, `font-style` and/or `unicode-range`.
 *
 * @example
 *   @include font-face(
 *     "source-sans-pro",
 *     "fonts/source-sans-pro-regular",
 *     ("woff2", "woff")
 *   ) {
 *     font-style: normal;
 *     font-weight: 400;
 *   }
 *
 *  // CSS Output
 *  @font-face {
 *    font-family: "source-sans-pro";
 *    src: url("fonts/source-sans-pro-regular.woff2") format("woff2"),
 *         url("fonts/source-sans-pro-regular.woff") format("woff");
 *    font-style: normal;
 *    font-weight: 400;
 *  }
 */

@mixin font-face(
    $font-family,
    $file-path,
    $file-formats: ("ttf", "woff2", "woff"),
    $asset-pipeline: false
  ) {

  @font-face {
    font-family: $font-family;
    src: _font-source-declaration(
      $font-family,
      $file-path,
      $asset-pipeline,
      $file-formats
    );
    @content;
  }
}
